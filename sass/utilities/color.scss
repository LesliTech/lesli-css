/*
Lesli

Copyright (c) 2020, Lesli Technologies, S. A.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.

LesliCSS - SCSS Utilities for websites, apps and web applications

Powered by https://www.lesli.tech
Building a better future, one line of code at a time.

@contact  <hello@lesli.tech>
@website  <https://lesli.tech>
@license  GPLv3 http://www.gnu.org/licenses/gpl-3.0.en.html

// · ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~
// · 
*/


@use "sass:map";


// · 
@function lesli-color-palette($pallete: false) {

    $lesli-css-colors: (

        // · lesli official color palette
        lesli: (
            primary: #0d52bf,
            dark: #001f66
        ),

        // · lesli engine collections
        collection: (
            administration: #3b6cff,
            intelligence: #172447,
            productivity: #ff3c00,
            integration: #edb78e,
            analytics: #63ccb5,
            security: #d3d3d3,
            finance: #ff2453,
            sales: #764aff,
            it: #ffd700
        ),

        // · 
        blue: (
            100: #8cd5ff,
            300: #64baff,
            500: #3689e6,
            700: #0d52bf,
            900: #002e99 
        ),

        // · 
        bubble: (
            100: #fe9ab8,
            300: #f4679d,
            500: #de3e80,
            700: #bc245d,
            900: #910e38
        ),

        // · 
        grape: (
            100: #e4c6fa,
            300: #cd9ef7,
            500: #a56de2,
            700: #7239b3,
            900: #452981 
        ),

        // · 
        lime: (
            100: #d1ff82,
            300: #9bdb4d,
            500: #68b723,
            700: #3a9104,
            900: #206b00 
        ),

        // · 
        orange: (
            100: #ffc27d,
            300: #ffa154,
            500: #f37329,
            700: #cc3b02,
            900: #a62100 
        ),

        // · 
        berry: (
            100: #ff8c82,
            300: #ed5353,
            500: #c6262e,
            700: #a10705,
            900: #7a0000 
        ),

        // · 
        cocoa: (
            100: #a3907c,
            300: #8a715e,
            500: #715344,
            700: #57392d,
            900: #3d211b 
        ),

        // · 
        banana: (
            100: #fff394,
            300: #ffe16b,
            500: #f9c440,
            700: #d48e15,
            900: #ad5f00 
        ),

        // · 
        slate: (
            100: #95a3ab,
            300: #667885,
            500: #485a6c,
            700: #273445,
            900: #0e141f 
        ),

        // · 
        mint: (
            100: #89ffdd,
            300: #43d6b5,
            500: #28bca3,
            700: #0e9a83,
            900: #007367
        ),

        // · 
        silver: (
            100: #fafafa,
            300: #d4d4d4,
            500: #abacae,
            700: #7e8087,
            900: #555761 
        ),

        // · 
        black: (
            100: #666666,
            300: #4d4d4d,
            500: #333333,
            700: #1a1a1a,
            900: #000000 
        ),
    );

    @if $pallete {

        // return a specific palette
        @return map.get($lesli-css-colors, $pallete);
    } @else {

        // return all the colors
        @return $lesli-css-colors;
    }

}


// · retorna una variante de una paleta de colores
@function lesli-color($pallete, $variant: 500) {

    // obtiene todos los colores disponibles
    $lesli-colors: lesli-color-palette($pallete);

    // ovtiene la variante del color solicitado
    $color: map.get($lesli-colors, $variant);

    @return $color;
}


// · imprime todos los colores disponibles
@mixin lesli-color-print($property: "color", $classs: "lesli-css-color") {

    $lesli-css-color-pallete: lesli-css-color-palette();

    @each $pallete_name, $pallete in $lesli-css-color-pallete {

        @each $variant, $color in $pallete {

            .#{$classs}-#{""+$pallete_name+""}-#{$variant} {

                //background-color: lesli-css-color($pallete_name, $variant);
                #{$property}: lesli-css-color($pallete_name, $variant);

            }
        }
    }
}
